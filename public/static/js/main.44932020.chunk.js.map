{"version":3,"sources":["components/ChartWithTable.js","components/Statistics.js","App.js","serviceWorker.js","index.js"],"names":["ChartWithTable","props","state","useCanvas","width","window","innerWidth","bar1","bar2","bar3","labelData1","labelData2","labelData3","toolTip1","toolTip2","toolTip3","selected","selectAll","data","toggleRow","bind","name","newSelected","Object","assign","this","setState","forEach","x","resetView","key","selectedNames","hasOwnProperty","push","b1","b2","b3","filter","b","prepareData","prevProps","map","d","y","label","toString","xOffset","yOffset","BarSeries","VerticalBarSeriesCanvas","VerticalBarSeries","columns","id","accessor","Cell","original","type","className","checked","onChange","Header","sortable","xType","height","xDistance","color","onNearestXY","val","labelAnchorX","labelAnchorY","style","display","justifyContent","backgroundColor","disabled","entries","length","onClick","filterBars","defaultSorted","desc","React","Component","Statistics","statistics","fetch","then","res","json","console","log","catch","err","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44932020.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalGridLines,\n  HorizontalGridLines,\n  VerticalBarSeries,\n  VerticalBarSeriesCanvas,\n  LabelSeries\n} from \"react-vis\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\nexport default class ChartWithTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      useCanvas: false,\n      width: window.innerWidth,\n      bar1: [],\n      bar2: [],\n      bar3: [],\n      labelData1: [],\n      labelData2: [],\n      labelData3: [],\n      toolTip1: {},\n      toolTip2: {},\n      toolTip3: {},\n      selected: {},\n      selectAll: 0,\n      data: []\n    };\n    this.toggleRow = this.toggleRow.bind(this);\n  }\n\n  toggleRow(name) {\n    const newSelected = Object.assign({}, this.state.selected);\n    newSelected[name] = !this.state.selected[name];\n    this.setState({\n      selected: newSelected,\n      selectAll: 2\n    });\n  }\n\n  toggleSelectAll() {\n    let newSelected = {};\n\n    if (this.state.selectAll === 0) {\n      this.state.data.forEach(x => {\n        newSelected[x.name] = true;\n      });\n    }\n\n    this.setState({\n      selected: newSelected,\n      selectAll: this.state.selectAll === 0 ? 1 : 0\n    });\n  }\n\n  async filterBars() {\n    await this.resetView()\n    let { bar1, bar2, bar3, selected } = this.state;\n    const selectedNames = []\n    for(const key in selected) {\n      if (selected.hasOwnProperty(key))\n        if (selected[key]) selectedNames.push(key)\n    }\n    let b1 = []\n    let b2 = []\n    let b3 = [];\n\n    for (const key of selectedNames) {\n      b1.push(bar1.filter(b => b.x === key)[0]);\n      b2.push(bar2.filter(b => b.x === key)[0]);\n      b3.push(bar3.filter(b => b.x === key)[0]);\n    }\n\n    this.setState({\n      bar1: b1,\n      bar2: b2,\n      bar3: b3,\n      labelData1: [],\n      labelData2: [],\n      labelData3: []\n    });\n  }\n\n  resetView() {\n    const {\n      bar1,\n      bar2,\n      bar3,\n      labelData1,\n      labelData2,\n      labelData3\n    } = this.prepareData(this.state.data);\n    this.setState({\n      bar1,\n      bar2,\n      bar3,\n      labelData1,\n      labelData2,\n      labelData3,\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n    const {\n      bar1,\n      bar2,\n      bar3,\n      labelData1,\n      labelData2,\n      labelData3\n    } = this.prepareData(data);\n    if (this.props.data !== prevProps.data) {\n      this.setState({\n        bar1,\n        bar2,\n        bar3,\n        labelData1,\n        labelData2,\n        labelData3,\n        data\n      });\n    }\n  }\n  prepareData(data) {\n    const bar1 = data.map(d => {\n      return { x: d.name, y: d.bar1 };\n    });\n\n    const bar2 = data.map(d => {\n      return { x: d.name, y: d.bar2 };\n    });\n\n    const bar3 = data.map(d => {\n      return { x: d.name, y: d.bar3 };\n    });\n    const labelData1 = bar1.map(d => ({\n      x: d.x,\n      y: d.y,\n      label: d.y.toString(),\n      xOffset: -45\n    }));\n    const labelData2 = bar2.map(d => ({\n      x: d.x,\n      y: d.y,\n      label: d.y.toString(),\n      yOffset: 5\n    }));\n    const labelData3 = bar3.map(d => ({\n      x: d.x,\n      y: d.y,\n      label: d.y.toString(),\n      yOffset: 0,\n      xOffset: 40\n    }));\n    return { bar1, bar2, bar3, labelData1, labelData2, labelData3 };\n  }\n  render() {\n    const {\n      useCanvas,\n      width,\n      bar1,\n      bar2,\n      bar3,\n      labelData1,\n      labelData2,\n      labelData3\n    } = this.state;\n    const BarSeries = useCanvas ? VerticalBarSeriesCanvas : VerticalBarSeries;\n    const columns = [\n      {\n        id: \"checkbox\",\n        accessor: \"\",\n        Cell: ({ original }) => {\n          return (\n            <input\n              type=\"checkbox\"\n              className=\"checkbox\"\n              checked={this.state.selected[original.name] === true}\n              onChange={() => this.toggleRow(original.name)}\n            />\n          );\n        },\n        Header: \"   \",\n        sortable: false,\n        width: 45\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\"\n      },\n      {\n        Header: \"% de Tiempo Ac 6\",\n        id: \"acc6%\",\n        accessor: d => d[\"acc6%\"]\n      },\n      {\n        Header: \"Acc B6 Total Eff# \",\n        id: \"acc6\",\n        accessor: d => d[\"acc6\"]\n      },\n      {\n        Header: \"% de Tiempo Ac 7\",\n        id: \"acc7%\",\n        accessor: d => d[\"acc7%\"]\n      },\n      {\n        Header: \"Acc B7 Total Eff# \",\n        id: \"acc7\",\n        accessor: d => d[\"acc7\"]\n      },\n      {\n        Header: \"% de Tiempo Ac 8\",\n        id: \"acc8%\",\n        accessor: d => d[\"acc8%\"]\n      },\n      {\n        Header: \"Acc B8 Total Eff# \",\n        id: \"acc8\",\n        accessor: d => d[\"acc8\"]\n      },\n      {\n        Header: \" Promedio\",\n        id: \"prom\",\n        accessor: d => (d[\"acc8\"] + d[\"acc7\"] + d[\"acc6\"]) / 3\n      }\n    ];\n\n    return (\n      <div className=\"my-5 mx-2\">\n        <XYPlot xType=\"ordinal\" width={width} height={350} xDistance={100}>\n          <VerticalGridLines />\n          <HorizontalGridLines />\n          <XAxis />\n          <YAxis />\n          <BarSeries\n            data={bar1}\n            color=\"#214460\"\n            onNearestXY={val => this.setState({ toolTip1: val })}\n          />\n          <LabelSeries data={labelData1} labelAnchorX=\"middle\" />\n          <BarSeries\n            data={bar2}\n            color=\"#77dacf\"\n            onNearestXY={val => this.setState({ toolTip2: val })}\n          />\n          <LabelSeries\n            data={labelData2}\n            labelAnchorX=\"middle\"\n            labelAnchorY=\"text-after-edge\"\n          />\n          <BarSeries\n            data={bar3}\n            color=\"#b860b9\"\n            onNearestXY={val => this.setState({ toolTip3: val })}\n          />\n          <LabelSeries data={labelData3} labelAnchorX=\"middle\" />\n        </XYPlot>\n        <div\n          className=\"my-3\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <p className=\"mx-1\">\n            <span\n              className=\"px-3 py-1 mr-2\"\n              style={{ backgroundColor: \"#214460\" }}\n            />{\" \"}\n            <strong className=\"mx-1\">Aceleración Baja Int.</strong> <br />{\" \"}\n            <span className=\"ml-5\">1 a 2 m/s2</span>\n          </p>\n          <p className=\"mx-1\">\n            <span\n              className=\"px-3 py-1 mr-2\"\n              style={{ backgroundColor: \"#77dacf\" }}\n            />{\" \"}\n            <strong className=\"mx-1\">Aceleración Media Int.</strong> <br />{\" \"}\n            <span className=\"ml-5\">2 a 3 m/s2</span>\n          </p>\n          <p className=\"mx-1\">\n            <span\n              className=\"px-3 py-1 mr-2\"\n              style={{ backgroundColor: \"#b860b9\" }}\n            />{\" \"}\n            <strong className=\"mx-1\">Aceleración Alta Int.</strong> <br />{\" \"}\n            <span className=\"ml-5\">+3 m/s2</span>\n          </p>\n        </div>\n        <div className=\"row\">\n          <div className=\"container-flex mx-auto\">\n            <span>\n              {this.state.toolTip1.x\n                ? `${this.state.toolTip1.x}'s data is ${this.state.toolTip1.y} , ${this.state.toolTip2.y}, ${this.state.toolTip3.y} respectively`: \"Please hover chart to see specific data.\"}\n            </span>\n          </div>\n        </div>\n        <div className=\"my-2 container\">\n        <button className=\"btn btn-primary mx-1 my-2\" disabled={Object.entries(this.state.selected).length === 0} onClick={()=>this.filterBars()}>Filter</button>\n        <button className=\"btn btn-outline-warning mx-1 my-2\" onClick={()=>this.resetView()}>Reset</button>\n          <ReactTable\n            data={this.state.data}\n            columns={columns}\n            defaultSorted={[{ id: \"name\", desc: false }]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ChartWithTable from './ChartWithTable'\nclass Statistics extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            statistics: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('/statistics')\n        .then(res => res.json())\n        .then(statistics => this.setState({statistics}, () => console.log('Here are the statistics: ',statistics)))\n        .catch(err => console.log('There was an error getting data from API'))\n    }\n\n    render() {\n        const {statistics} = this.state;\n        return (\n            <div className=\"container-flex\">\n                <ChartWithTable data={statistics}></ChartWithTable>\n            </div>\n           \n        )\n    }\n}\n\nexport default Statistics;\n","import React from 'react';\nimport Statitics from './components/Statistics';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Statitics></Statitics>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}